


#include <Wire.h>  // Only needed for Arduino 1.6.5 and earlier
#include "SSD1306Wire.h" // legacy include: `#include "SSD1306.h"`

#include <NTPClient.h>
#include <WiFiUdp.h>

#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>


//Week Days
String weekDays[7]={"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};

//Month names
String months[12]={"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};

const char* ssid = "Nguyen Tiem";      //"Nguyen Tiem";
const char* password = "58642110";       //"58642110";

WiFiServer server(88);
IPAddress staticIP(192, 168, 1, 22);
IPAddress gateway(192, 168, 1, 1);
IPAddress subnet(255, 255, 255, 0);

WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org");







int screenW = 128;
int screenH = 64;
int clockCenterX = screenW/2;
int clockCenterY = ((screenH-16)/2)+8;   // top yellow part is 16 px height
int clockRadius = 32;
int currentHour ; 
int currentMinute ; 
int currentSecond ;
String weekDay ;
int monthDay ;
int currentMonth ;
String currentMonthName ;
int currentYear ;
int n = 0 ;

String mess;
int red = D5;
int green = D6;
int blue = D7;
int frame = 53;
int pwmr = 53 , pwmb = 53, pwmg = 53;

SSD1306Wire  display(0x3c, D2, D1);


static const unsigned char PROGMEM logo_bmp[] =
{ B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111111, B11101111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111111, B00000001, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111110, B00000000, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111100, B00000000, B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111100, B01000000, B00111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111000, B11100000, B00011111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111000, B10100000, B00011111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11111000, B00100001, B00011111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11110000, B00000001, B10011111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11110001, B00010011, B10011111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,
  B01111111, B11111111, B11110001, B11111111, B10001111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111110, B01111111,
  B01111111, B11111111, B11100001, B11111111, B10001111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B01000000, B00000000,
  B01111111, B11111111, B11100000, B10101101, B10001111, B11111111, B11111111, B11111111, B11111111, B11000010, B10111111, B11111111, B10011000, B00000000, B00000000,
  B01111111, B11111111, B11100000, B10000011, B00001111, B10111111, B11111111, B11111111, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01111111, B11111111, B11100000, B01100110, B00000011, B00000111, B10100001, B10011110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01111111, B11111111, B11100000, B00111100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00001110,
  B01111111, B11111111, B11000000, B00100000, B00000000, B01100000, B00000000, B00000000, B00000000, B00000000, B00000011, B11100000, B00000000, B00000000, B00011100,
  B01111111, B11111110, B10000000, B00100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B11110000, B00111111, B11111111, B11110000,
  B01111100, B11111111, B11000000, B01110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B11111111, B11111111, B11111111, B11110000,
  B01100010, B11111111, B10010011, B11111000, B00000000, B00000000, B00000000, B00000011, B11100000, B00000000, B00000111, B11111111, B11111111, B11111111, B11110000,
  B01010001, B11110001, B11111111, B11111000, B00000000, B00010000, B00000001, B10000111, B11110000, B00000000, B00001111, B11111111, B11111111, B11111111, B11110000,
  B00011110, B11100001, B11111111, B11111100, B00000111, B00000000, B00001111, B00000011, B11111000, B00000000, B00011111, B11111111, B11111111, B11111111, B11110000,
  B00011101, B11000011, B11111111, B11111100, B00000111, B10000000, B00010011, B11111111, B11100000, B00000000, B00001111, B11111111, B11111111, B11111111, B11111110,
  B01101110, B11000011, B11111111, B11111000, B00000111, B11000000, B00100001, B11111111, B11101110, B00111111, B11111111, B11111111, B00111111, B11111111, B11111111,
  B01001100, B00000011, B11111111, B11111000, B00000111, B11000000, B00000000, B00000000, B00010010, B00011101, B10111110, B11111111, B10000000, B11111111, B11111111,
  B00001100, B00000111, B11111111, B11111100, B00000111, B11000000, B00000000, B00000000, B00000000, B00011100, B00111111, B10011111, B11111000, B01111101, B11111000,
  B00001111, B11000111, B11111111, B11111110, B00100001, B11110000, B00000000, B00000000, B00000000, B00000000, B00111011, B10001111, B11111000, B00111101, B11110000,
  B00111001, B11011111, B11111111, B11111111, B11111011, B11110100, B10010010, B11010010, B00000000, B10000000, B00110000, B00000111, B10111100, B01111111, B11111111,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11110100, B10010110, B11111111, B11111111, B10000000, B00000001, B11100111, B11011100, B00111011, B11111111,
  B01111111, B11001111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111100, B00000000, B00111100, B00000000, B00111011, B11111111,
  B01111111, B11001111, B11111111, B11111111, B11111111, B11111111, B11100000, B00000000, B00000000, B00001111, B11111111, B11001110, B00000000, B00110010, B01100110,
  B01111111, B11011111, B11111111, B11111111, B11111111, B11111111, B11100100, B11110110, B11001010, B00000111, B11111111, B11111111, B11111111, B11110011, B11111111,
  B01111111, B11001111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11011011, B01100001, B11111111, B10001001, B00000010, B00110011, B11111111,
  B00111111, B11011111, B11111111, B11111111, B11111111, B11111111, B11100000, B10010011, B11100000, B10000000, B11111111, B11111000, B11110000, B00000001, B11111111,
  B00111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11101111, B11111000, B00000000, B00000000, B11111000, B00001000, B01000000, B00000000, B01100000,
  B00001111, B01111111, B11101111, B11111111, B11111111, B11111111, B11111111, B11111000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000, B01000000,
  B00000111, B00000111, B11101111, B11111111, B11111111, B11111111, B00000000, B00000000, B01110000, B00000000, B01111110, B00000000, B00000000, B00000000, B00000000,
  B00000110, B00000011, B11111111, B11111111, B11111111, B11111110, B00000001, B11011000, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000110, B00000011, B11111111, B11111111, B11111111, B11111110, B00000001, B11111011, B11000100, B00000000, B00000000, B00000001, B00000000, B00000000, B00000000,
  B00000110, B00000001, B11111111, B11111111, B11111111, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000010, B00000000, B00000000, B00000001,
  B00000000, B00000001, B11111111, B11111111, B11111111, B10000000, B00000000, B00000000, B00000000, B00000000, B00000011, B10000000, B00000000, B00000000, B00000000,
  B00000000, B00000011, B11111111, B11111111, B11111111, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000011, B11111111, B11111111, B11111111, B00000000, B00000000, B00011100, B00000000, B00000000, B00001100, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000011, B11111111, B11111111, B11110000, B00000000, B00000000, B01000100, B00000000, B00001000, B00011100, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000011, B11111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000110, B01111111, B11111000, B01110000, B00000000, B00000111, B00000000, B00110000, B00001000, B01000010, B00100000, B00000000, B00010000, B00000000,
  B00000000, B00000101, B11111111, B10000001, B11110000, B00000000, B00000000, B00000000, B00111111, B11111110, B01000000, B00000000, B00001100, B00000000, B00000000,
  B01111000, B00000111, B11111100, B01111111, B11110000, B00000000, B00000000, B00000000, B00000000, B00000000, B01011111, B11111111, B10001100, B00000000, B00000000,
  B01111111, B11111110, B00110001, B11111111, B11110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00011000, B00000000, B00000000,
  B01111111, B11111111, B11100011, B11111111, B11111111, B11100000, B00000000, B00000000, B00000001, B11100011, B11111111, B11110000, B00001000, B00000000, B00000000,
  B01111111, B11111111, B00000000, B00011111, B11111111, B11111111, B11111111, B11100000, B00000000, B00010000, B00000000, B00100111, B11111111, B11111000, B00000000,
  B01111111, B11111111, B11100000, B00000111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111000, B10000000, B00000000, B00000000, B00000111, B11111111,
  B01111111, B11111001, B11100000, B00000011, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B00001000, B00000000, B00000000,
  B01111111, B11111001, B11000000, B00000001, B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11000000

};  //icon

static const unsigned char PROGMEM logo_bmp1[] = {
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11110000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11110000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11110000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100111, B11100000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111110, B11100000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B01111110, B11100000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11000000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100000,
  B01111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100000, B00111111, B11111111, B00000000,
  B00111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11110000, B00011111, B11111111, B11111111, B11100100, B00111111, B11111110, B11100000,
  B00111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100000, B00001111, B10111111, B11111111, B11111000, B11111011, B11111111, B11100000,
  B01111110, B11111110, B11111111, B11111111, B11111111, B11111111, B11111111, B11100100, B00000111, B11111011, B11000011, B11111000, B11111111, B00000100, B00000000,
  B01111100, B11111111, B11111110, B00000011, B11111111, B11111111, B11111111, B11001111, B10000111, B11111111, B11100000, B00011100, B00000111, B11100000, B00000000,
  B01101011, B00001111, B01111000, B00000001, B01111111, B11111111, B11111111, B11001111, B11000011, B11111111, B11101111, B00000000, B00000000, B01110000, B00000000,
  B01111100, B01000111, B11100000, B00011001, B10001111, B11111111, B11111111, B10001111, B11100001, B11111110, B00111111, B11000000, B00000000, B00000000, B00000000,
  B01110111, B11111011, B10000000, B10001001, B00000010, B11111111, B11111110, B10000001, B00110000, B01111110, B00001111, B11111111, B11001100, B00000000, B00000000,
  B00100000, B11111000, B00000011, B11000101, B11111101, B10011111, B11011111, B10001011, B11110000, B11100001, B11110111, B11111011, B11100000, B00000000, B00000000,
  B00000000, B00000000, B00000100, B01000001, B10101011, B11111000, B11111111, B10001111, B11110000, B01101111, B11111101, B10111101, B11100000, B00000000, B00000000,
  B00000000, B00000111, B10010000, B00000000, B00000000, B00000101, B10111111, B10001111, B11110000, B01011101, B10111001, B00111001, B10000000, B00000000, B00000000,
  B00000000, B00000111, B11000000, B00000000, B00000000, B00000111, B00000000, B00001101, B11110000, B00111111, B10011111, B11000000, B00000000, B00000000, B00000000,
  B00000111, B11111101, B10000000, B00000000, B00000000, B00000000, B00111110, B00000111, B11110000, B00011111, B11111111, B10000000, B00110001, B00000111, B00000000,
  B00001000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11100000, B00011111, B11111000, B00000000, B00000001, B10000000, B00000000,
  B01111011, B11000000, B00000000, B00000111, B00000000, B00000000, B01100000, B00000000, B00000000, B00001111, B11111000, B00000000, B00000000, B00000000, B00000000,
  B00101000, B01000100, B00010000, B00000110, B00000000, B00000000, B01110000, B00000000, B00100000, B00001111, B00001000, B00000000, B00000000, B00000000, B00000000,
  B00001100, B00001011, B01101101, B00001111, B11011101, B00000010, B00111000, B00000011, B11100000, B00000001, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01111111, B00001111, B11111111, B11111101, B11110111, B11111000, B11111111, B00000111, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01111111, B11100101, B10101000, B01111110, B00001000, B01111000, B11111110, B00000011, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00111110, B01000000, B00000000, B00000000, B00000101, B11111111, B11111110, B11000011, B11110000, B00000000, B00000000, B00000011, B00000000, B00000000, B00000000,
  B01111110, B00000000, B00000000, B00010000, B00110000, B00111111, B11111101, B11100011, B11111000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01110000, B00000000, B00000000, B00000000, B01000000, B00011100, B00000001, B11110111, B11111000, B00000000, B00000000, B00001000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00001100, B00000001, B11111111, B11110000, B00000000, B00000001, B00000000, B01100010, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B10111111, B11110000, B00000000, B00000000, B00000101, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00001000, B00000000, B00000000, B00000011, B11001111, B11111100, B00011001, B00000000, B00000011, B10000000, B00000000, B00000000,
  B00000000, B00000000, B00010000, B00110000, B00000000, B00000000, B00000111, B10100011, B11111100, B01010001, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B10010111, B11111111, B11010000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00100000, B00000000, B00000000, B00000000, B00000000, B00000110, B01100011, B11111111, B11110000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000110, B00000000, B00000000, B00000000, B00000000, B10001011, B00100011, B11111111, B11001000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, B00000011, B00000001, B11111110, B11001000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000, B11111110, B01000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000010, B00000000, B00001000, B00000000, B00000000, B01110000, B01111110, B01001000, B00110000, B10000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00001010, B00000000, B00000000, B00000000, B00000000, B11000000, B00111110, B00001000, B00000000, B00000000, B00000000, B00001100, B00000000,
  B00000000, B00000000, B00000110, B00000000, B00000000, B00000000, B00000001, B11110000, B00011100, B00001000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11110000, B00001110, B00011000, B00000000, B00000101, B10000000, B00001100, B00100000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000001, B00111000, B10001110, B10011000, B00000000, B00001110, B00001000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000001, B11110000, B01000111, B10011000, B00011000, B00010000, B00001000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B10011000, B00100011, B10011100, B00011000, B00010000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000, B00100011, B10111000, B00000100, B00000000, B00000000, B00000010, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00110000, B00110000, B00000000, B00111001, B00010001, B10111000, B00000100, B00000000, B00000000, B00000000, B00000000,
  B00001111, B10110000, B00000000, B00000000, B00000010, B11100110, B00000000, B00111100, B10001001, B10111000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00100111, B10100000, B00000000, B00000000, B00000001, B10000100, B00000000, B00111110, B11100100, B11111000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00001101, B10000000, B00000000, B00100000, B00000000, B00000100, B00000000, B00011110, B01100000, B11111000, B00000000, B00010000, B00000000, B00000000, B00000000,
  B00011100, B00000000, B00000000, B00100000, B00000000, B00000000, B00000000, B01011111, B11011010, B11111000, B00000000, B00010000, B00000000, B00000000, B00000000,
  B00010000, B00000000, B00000000, B00001000, B00010000, B00000000, B00000000, B01001111, B01001100, B11110000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00010000, B00011000, B00000000, B00000000, B01001111, B00100000, B11110000, B00000000, B00000000, B00000000, B00000010, B00000000,
  B00000000, B00000000, B00000000, B00010000, B00100000, B00000000, B00000000, B01001111, B10000001, B11100000, B00000000, B00000000, B00000000, B00000010, B00000000,
  B01000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B10000000, B00110000, B00000000, B00000000, B00000000, B00000000, B00000000
};


static const unsigned char PROGMEM logo_bmp2[] = {
  B01111111, B11111000, B00000000, B00000000, B00000111, B11100000, B00000001, B11111111, B11111111, B11111111, B11100001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11111000, B00000000, B00000000, B00000111, B11100000, B00000001, B11111111, B11111111, B11111111, B11100001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11111000, B00000000, B00000000, B00000111, B11000000, B00000000, B11111111, B11111111, B11111111, B11100001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00000111, B11000000, B00000000, B11111111, B11111111, B11111111, B11100001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00000111, B10000000, B00000000, B01111111, B11111111, B11111111, B11100001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00000111, B10000000, B00000001, B01111111, B11111111, B11111111, B11100001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001111, B10000000, B00000000, B01111111, B11111111, B11111111, B11100001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001111, B00000000, B00000101, B01111111, B11111111, B11111111, B11100001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001111, B00000000, B00000111, B10111111, B11111111, B11111111, B11110001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001111, B00000000, B00000010, B11111111, B11111111, B11111111, B11110001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001111, B00000000, B00000011, B11111111, B11111111, B11111111, B11110001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001111, B00000000, B00000000, B11111111, B11111111, B11111111, B11110001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001111, B00000000, B00000001, B11111111, B11111111, B11111111, B11110001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001111, B00000000, B00000011, B01111111, B11111111, B11111111, B11110000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001111, B00000000, B00000011, B00111111, B11111111, B11111111, B11110000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001111, B00011110, B00000000, B00001111, B11111111, B11111111, B11110000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001110, B00111111, B10000000, B00001111, B11111111, B11111111, B11110000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001100, B11111111, B11000000, B00001111, B11111111, B11111111, B11110000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001100, B11111111, B11100000, B00001111, B11111111, B11111111, B11110000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001101, B00111111, B11110000, B00001111, B11111111, B11111111, B11110000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00000011, B10000111, B11111000, B00001111, B11111111, B11111111, B11110000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00000010, B00000000, B01111100, B00001111, B11111111, B11111111, B11110000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00000000, B00000000, B00111111, B00001111, B11111111, B11111111, B11110000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00000110, B00000000, B00000111, B11111111, B11111111, B11111111, B11110000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00000110, B00000000, B00000001, B11111110, B01111111, B11111111, B11111000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001110, B10000000, B00000001, B11111110, B11111111, B11111111, B11111000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001100, B00000000, B00000000, B01111111, B11111111, B11111111, B11111000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001110, B00000000, B00000000, B00001111, B11111111, B11111111, B11111000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001110, B00000000, B00000000, B00000011, B11111111, B11111111, B11111010, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00011111, B00000000, B00000000, B00000001, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001111, B10000000, B00000000, B00000000, B00111111, B11111111, B11111111, B01111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00100000, B00110011, B11111111, B11111111, B01111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00010000, B10000000, B00000001, B01111000, B00111011, B11111111, B11111111, B01111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00111111, B01001000, B00000101, B11111000, B00111101, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00111000, B11111110, B00000111, B11110000, B00111100, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00100001, B11111110, B00000011, B11100000, B00111110, B00111111, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00111111, B11111110, B00000011, B11000000, B00011111, B00011111, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00011110, B11111100, B00000001, B00000000, B00001111, B10001111, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B01111110, B11111100, B00000010, B00000000, B00000111, B11000011, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B01111100, B11111100, B00000100, B00000000, B00000011, B11100001, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B00001100, B11110000, B00001111, B11000000, B00000001, B11110000, B11111111, B11111111, B11111111, B11111111, B11111111, B00000000,
  B01111111, B11110000, B00000000, B00000000, B00001100, B01111000, B00011111, B11000000, B00000000, B01111110, B11111111, B11111111, B11111111, B11111111, B11111111, B00000000,
  B01111111, B11110000, B00000000, B00000000, B01110000, B00111000, B00111111, B10000000, B00000000, B00111111, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B11000001, B00011000, B01111110, B00000000, B11000000, B00001111, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B11000111, B11000000, B11111110, B00000011, B11000000, B00000110, B00111111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11110000, B00000000, B00000000, B11111111, B11100001, B11111100, B00000011, B11100000, B00000000, B00011111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11100000, B00000000, B00000000, B01110000, B00000111, B11111100, B00000111, B11110000, B00000000, B00011111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11100000, B00000000, B00000000, B01100011, B11000111, B11111000, B00000111, B11111000, B00000000, B00001111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11000000, B00000000, B00000000, B01000111, B00000111, B11110000, B00001111, B11111100, B00000000, B00000111, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B11100000, B00000000, B00000000, B01111100, B00000111, B11100000, B00001111, B11111111, B00000000, B00000011, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B10000000, B00000000, B00000001, B00111000, B00000111, B11000000, B00011111, B11111111, B10000000, B00000001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01111111, B00000000, B00000000, B00000001, B00010000, B00000111, B10000000, B00111111, B11111111, B11110000, B00000001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B01110110, B00000000, B00000000, B00000000, B00100100, B00000111, B10000000, B00111111, B11111111, B11111100, B00000001, B11111111, B11111111, B11111111, B11111111, B10000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B00000000, B01111111, B11111111, B11111111, B00000000, B11111111, B11111111, B11111111, B11111111, B10000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000010, B00000000, B11111111, B11111111, B11111111, B11000000, B01111111, B11111111, B11111111, B11111111, B10000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000001, B11111111, B11111111, B11111111, B11100000, B00111111, B11111111, B11111111, B11111111, B10000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11111111, B11111111, B11111111, B11110000, B00001111, B11111111, B11111111, B11111111, B10000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B11111111, B11111111, B11111111, B11110000, B00000011, B11111111, B11111111, B11111111, B10000000,
  B00000000, B00000000, B00000000, B00000000, B01000000, B00000000, B00001111, B11111111, B11111111, B11111111, B11111000, B00000011, B11111111, B11111111, B11111111, B10000000,
  B00000000, B00000000, B00000000, B00000000, B11000000, B00000000, B00001111, B11111111, B11111111, B11111111, B11111000, B00000000, B01110001, B11111111, B11111111, B10000000,
  B00000000, B00000000, B00000000, B00000000, B01000000, B00000000, B00011111, B11111111, B11111111, B11111111, B11110000, B00000000, B00000001, B11111111, B11111111, B10000000,
  B00000000, B00000000, B00000000, B00000000, B01100000, B00000000, B00001111, B11111111, B11111111, B11111111, B11111000, B00000000, B00011111, B11111111, B11111111, B10000000

};



void testdrawbitmap(const uint8_t bitmap[], int16_t LOGO_HEIGHT, int16_t LOGO_WIDTH ) {
  display.clear();
  display.drawXbm(
    0,
    0,
    LOGO_WIDTH, LOGO_HEIGHT, bitmap);
  display.display();

}

void analogClockFrame( ) {
  display.clear();
  display.drawCircle(clockCenterX , clockCenterY ,2);
  
  for( int z=0; z < 360;z= z + 30 ){
  //Begin at 0° and stop at 360°
    float angle = z ;
    angle = ( angle / 57.29577951 ) ; //Convert degrees to radians
    int x2 = ( clockCenterX + ( sin(angle) * clockRadius ) );
    int y2 = ( clockCenterY - ( cos(angle) * clockRadius ) );
    int x3 = ( clockCenterX + ( sin(angle) * ( clockRadius - ( clockRadius / 8 ) ) ) );
    int y3 = ( clockCenterY - ( cos(angle) * ( clockRadius - ( clockRadius / 8 ) ) ) );
    display.drawLine( x2 , y2  , x3  , y3);
  }
 for( int z=90; z <= 360;z= z + 90 ){
  //Begin at 0° and stop at 360°
  float angle ;
  float rad;
  if(z==90){
     angle = z-15 ;
     rad= clockRadius-8;
    }
    if(z ==180){
     angle = z+8 ;
     rad= clockRadius-13;
    }
    if(z==270){
     angle = z+15 ;
     rad= clockRadius-6;
    }
    if(z ==360){
     angle = z-10 ;
     rad= clockRadius-2;
    }
  
 
    
    angle = ( angle / 57.29577951 ) ; //Convert degrees to radians
    int x_2 = ( clockCenterX + ( sin(angle) * rad ) );
    int y_2 = ( clockCenterY - ( cos(angle) * rad ) );
    
  display.setFont(ArialMT_Plain_10);
  display.drawString(x_2, y_2, String(z/30));
  }
  // display second hand
  float angle = currentSecond * 6 ;
  angle = ( angle / 57.29577951 ) ; 
  int x3 = ( clockCenterX + ( sin(angle) * ( clockRadius - ( clockRadius / 5 ) ) ) );
  int y3 = ( clockCenterY - ( cos(angle) * ( clockRadius - ( clockRadius / 5 ) ) ) );
  display.drawLine( clockCenterX  , clockCenterY  , x3  , y3 );
  //
  // display minute hand
  angle = currentMinute * 6 ;
  angle = ( angle / 57.29577951 ) ; //Convert degrees to radians
  x3 = ( clockCenterX + ( sin(angle) * ( clockRadius - ( clockRadius / 4 ) ) ) );
  y3 = ( clockCenterY - ( cos(angle) * ( clockRadius - ( clockRadius / 4 ) ) ) );
  display.drawLine( clockCenterX  , clockCenterY  , x3  , y3 );
 
  // display hour hand
  angle = currentHour* 30 + int( (currentMinute / 12 ) * 6 )   ;
  angle = ( angle / 57.29577951 ) ; //Convert degrees to radians
  x3 = ( clockCenterX + ( sin(angle) * ( clockRadius - ( clockRadius / 2 ) ) ) );
  y3 = ( clockCenterY - ( cos(angle) * ( clockRadius - ( clockRadius / 2 ) ) ) );
  display.drawLine( clockCenterX  , clockCenterY , x3  , y3 );

  switch((currentSecond)%6){
    case 0:
   display.setFont(ArialMT_Plain_10);
    display.drawString(10,2 , "T");
    
    display.drawString(115,2 , "H");
    
    
    break;
   
    case 1:
     display.setFont(ArialMT_Plain_10);
  display.drawString(10,2 , "T");
    display.drawString(10,16 , "I");
   
    display.drawString(115,2 , "H");
    display.drawString(115,16 , "U");
    
    
   
     break;
    case 2:
     display.setFont(ArialMT_Plain_10);
    display.drawString(10,2 , "T");
    display.drawString(10,16 , "I");
    display.drawString(10,30 , "E");
  
    display.drawString(115,2 , "H");
    display.drawString(115,16 , "U");
    display.drawString(115,30 , "S");
    
    
     break;
    case 3:
     display.setFont(ArialMT_Plain_10);
    display.drawString(10,2 , "T");
    display.drawString(10,16 , "I");
    display.drawString(10,30 , "E");
    display.drawString(10,44 , "M");
    display.drawString(115,2 , "H");
    display.drawString(115,16 , "U");
    display.drawString(115,30 , "S");
    display.drawString(115,44 , "T");
     break;
    default:
     display.setFont(ArialMT_Plain_10);
    display.drawString(10,2 , "T");
    display.drawString(10,16 , "I");
    display.drawString(10,30 , "E");
    display.drawString(10,44 , "M");
    display.drawString(115,2 , "H");
    display.drawString(115,16 , "U");
    display.drawString(115,30 , "S");
    display.drawString(115,44 , "T");
    break;
    
    }

  
  display.display();

}

void digitalClockFrame( int16_t x, int16_t y) {
   display.clear();
   
  String currentDate =String(monthDay) + "-" + String(currentMonth) + "-" +String(currentYear) ;
  String timenow = String(currentHour)+":"+String(currentMinute)+":"+String(currentSecond);
  display.setTextAlignment(TEXT_ALIGN_CENTER);
  
    display.setFont(ArialMT_Plain_10);
  display.drawString(clockCenterX + x, 0, String(weekDay) );
   display.setFont(ArialMT_Plain_16);
  display.drawString(clockCenterX + x , 15, currentDate );
  display.setFont(ArialMT_Plain_24);
  display.drawString(clockCenterX + x , clockCenterY + y, timenow );
  display.display();
 
  
}


void connectWifi()
{
  Serial.printf("Connecting to %s \n", ssid);

  //WiFi.config(staticIP, gateway, subnet);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(200);
    Serial.print(".");
  }
  Serial.println();
  Serial.print("Connected, IP address: ");
  Serial.println(WiFi.localIP());
  Serial.println();
  server.begin();
}


void recv() {
  WiFiClient client = server.available();
  // wait for a client (web browser) to connect
  if (client)
  {
    Serial.println("connected!");
    while (client.connected())
    {
      if (client.available())
      {

        char line[4];
        memset(line, 0, 4);
        client.readBytes(line, 4);
        frame = (int)line[0];
        pwmr = (int)line[1];
        pwmg = (int)line[2];
        pwmb = (int)line[3];
        Serial.println(line);
      }


    }
    delay(1); // give the web browser time to receive the data

    // close the connection:
    client.stop();
    Serial.println("[Client disonnected]");
  }

  Serial.println("out");
}



void setup() {
  Serial.begin(115200);
  
  pinMode(red, OUTPUT);
  pinMode(green, OUTPUT);
  pinMode(blue, OUTPUT);
  connectWifi();
  
  display.init();
  display.flipScreenVertically();
  display.setFont(ArialMT_Plain_10);
  timeClient.begin();
  timeClient.setTimeOffset(25200);
}


void loop() {
 // testdrawbitmap(logo_bmp, 60, 120);
   switch (frame-48) {
          case 0:
            testdrawbitmap(logo_bmp, 60, 120);
            Serial.println("0");
            break;
          case 1:
            testdrawbitmap(logo_bmp1, 60, 116);
            Serial.println("1");
            break;
          case 2 :
            testdrawbitmap(logo_bmp2, 62, 121);
            Serial.println("2");
            break;
          case 3:
            timeClient.update();
            unsigned long epochTime = timeClient.getEpochTime();
            currentHour = timeClient.getHours(); 
            currentMinute = timeClient.getMinutes();
            currentSecond = timeClient.getSeconds();
            weekDay = weekDays[timeClient.getDay()];
            struct tm *ptm = gmtime ((time_t *)&epochTime); 
            monthDay = ptm->tm_mday;
            currentMonth = ptm->tm_mon+1;
            currentMonthName = months[currentMonth-1];
            currentYear = ptm->tm_year+1900;
            digitalClockFrame(0,0);
            Serial.println("3");
            break; 
          
        }
        if(frame -48==5){
         
            timeClient.update();
            unsigned long epochTime = timeClient.getEpochTime();
            currentHour = timeClient.getHours();
            currentMinute = timeClient.getMinutes();
            currentSecond = timeClient.getSeconds();
            analogClockFrame();
            Serial.println(currentHour) ; 
            Serial.println(currentMinute) ; 
            Serial.println(currentSecond) ; 
          
          }
        analogWrite(green,(pwmg-48)*(102)); 
        analogWrite(red,(pwmg-48)*(102));
        analogWrite(blue,(pwmb-48)*(102));
        recv(); 


}
